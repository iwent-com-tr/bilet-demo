{
  "info": {
    "name": "Bilet Demo - Auth Routes",
    "description": "Authentication routes for Bilet Demo application including user registration, login, organizer registration, and city/county data endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "User Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"StrongPass123!\",\n  \"birthYear\": 1990,\n  \"phone\": \"+905551234567\",\n  \"city\": \"istanbul\",\n  \"userType\": \"USER\",\n  \"avatar\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user with required fields matching the Prisma User schema."
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.tokens.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.tokens.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"StrongPass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with email and password. Sets accessToken and refreshToken variables on success."
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user information."
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"phone\": \"+905559876543\",\n  \"city\": \"ankara\",\n  \"avatar\": \"https://example.com/new-avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            },
            "description": "Update user profile information."
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token."
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout and invalidate tokens."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Organizer Authentication",
      "item": [
        {
          "name": "Register Organizer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Events\",\n  \"company\": \"Event Masters Ltd\",\n  \"phone\": \"+905551112233\",\n  \"email\": \"jane@eventmasters.com\",\n  \"password\": \"OrganizerPass123!\",\n  \"taxNumber\": \"1234567890\",\n  \"taxOffice\": \"Kadıköy\",\n  \"address\": \"123 Event Street, Istanbul\",\n  \"bankAccount\": \"TR123456789012345678901234\",\n  \"avatar\": \"https://example.com/organizer-avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register-organizer",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register-organizer"]
            },
            "description": "Register a new event organizer. Organizer accounts require admin approval."
          },
          "response": []
        }
      ]
    },
    {
      "name": "City & County Data",
      "item": [
        {
          "name": "Get All Cities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/cities",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "cities"]
            },
            "description": "Get list of all available cities from cities.json with their basic information."
          },
          "response": []
        },
        {
          "name": "Get Counties by City",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/counties?city=istanbul",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "counties"],
              "query": [
                {
                  "key": "city",
                  "value": "istanbul",
                  "description": "City name to get counties for"
                }
              ]
            },
            "description": "Get list of counties (ilçe) for a specific city."
          },
          "response": []
        }
      ]
    }
  ]
}
