{
  "info": {
    "name": "Bilet Demo - Push Notifications API",
    "description": "Complete push notifications API for Bilet Demo application including subscription management, test notifications, event notifications, and broadcast messaging.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "testEventId",
      "value": "550e8400-e29b-41d4-a716-446655440000",
      "type": "string"
    },
    {
      "key": "testEndpoint",
      "value": "https://fcm.googleapis.com/fcm/send/test-endpoint",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Push Subscription Management",
      "description": "Endpoints for managing push notification subscriptions",
      "item": [
        {
          "name": "Get VAPID Public Key",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/push/public-key",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "public-key"
              ]
            },
            "description": "Get the VAPID public key required for client-side push subscription. This endpoint is public and doesn't require authentication."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/push/public-key",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "public-key"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"publicKey\": \"BEl62iUYgUivxIkv69yViEuiBIa-Ib9-SkvMeAtA3LFgDzkrxZJjSgSnfckjBJuBkr3qBUYIHBQFLXYp5Nksh8U\"\n}"
            }
          ]
        },
        {
          "name": "Subscribe to Push Notifications",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"subscription\": {\n    \"endpoint\": \"https://fcm.googleapis.com/fcm/send/cch_5apOFrA:APA91bGqJQRT...\",\n    \"keys\": {\n      \"p256dh\": \"BEl62iUYgUivxIkv69yViEuiBIa-Ib9-SkvMeAtA3LFgDzkrxZJjSgSnfckjBJuBkr3qBUYIHBQFLXYp5Nksh8U\",\n      \"auth\": \"tBHItJI5svbpez7KI4CCXg\"\n    },\n    \"expirationTime\": null\n  },\n  \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/push/subscribe",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "subscribe"
              ]
            },
            "description": "Subscribe the authenticated user to push notifications. Creates or updates a push subscription."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"subscription\": {\n    \"endpoint\": \"https://fcm.googleapis.com/fcm/send/test-endpoint\",\n    \"keys\": {\n      \"p256dh\": \"test-p256dh-key\",\n      \"auth\": \"test-auth-key\"\n    }\n  },\n  \"userAgent\": \"Mozilla/5.0 Test Browser\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/push/subscribe",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "subscribe"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Push subscription registered successfully\",\n  \"subscription\": {\n    \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"endpoint\": \"https://fcm.googleapis.com/fcm/send/test-endpoint\",\n    \"enabled\": true,\n    \"createdAt\": \"2024-01-15T10:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get User Subscriptions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/push/subscriptions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "subscriptions"
              ]
            },
            "description": "Get all push subscriptions for the authenticated user."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/push/subscriptions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "subscriptions"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"subscriptions\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"endpoint\": \"https://fcm.googleapis.com/fcm/send/test-endpoint\",\n      \"enabled\": true,\n      \"userAgent\": \"Mozilla/5.0 Test Browser\",\n      \"createdAt\": \"2024-01-15T10:30:00.000Z\",\n      \"lastSeenAt\": \"2024-01-15T12:00:00.000Z\"\n    }\n  ],\n  \"count\": 1\n}"
            }
          ]
        },
        {
          "name": "Unsubscribe from Push Notifications",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"endpoint\": \"{{testEndpoint}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/push/unsubscribe",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "unsubscribe"
              ]
            },
            "description": "Remove a push subscription for the authenticated user."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"endpoint\": \"https://fcm.googleapis.com/fcm/send/test-endpoint\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/push/unsubscribe",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "unsubscribe"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Push subscription removed successfully\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Test Notifications",
      "description": "Endpoints for testing push notifications",
      "item": [
        {
          "name": "Send Test Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/push/test",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "test"
              ]
            },
            "description": "Send a test push notification to all active subscriptions of the authenticated user."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/push/test",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "test"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Test notification sent successfully\",\n  \"sent\": 1,\n  \"failed\": 0,\n  \"invalidEndpoints\": 0,\n  \"targetSubscriptions\": 1\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Event Notifications",
      "description": "Endpoints for sending event-specific notifications (Admin/Organizer only)",
      "item": [
        {
          "name": "Send Event Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"payload\": {\n    \"title\": \"Event Update: Rock Concert Tonight!\",\n    \"body\": \"Don't forget! Your event starts in 2 hours. See you there!\",\n    \"url\": \"/events/{{testEventId}}\",\n    \"icon\": \"https://example.com/icons/event-icon.png\",\n    \"badge\": \"https://example.com/icons/badge.png\",\n    \"actions\": [\n      {\n        \"action\": \"view\",\n        \"title\": \"View Event\",\n        \"icon\": \"https://example.com/icons/view.png\"\n      },\n      {\n        \"action\": \"directions\",\n        \"title\": \"Get Directions\",\n        \"icon\": \"https://example.com/icons/directions.png\"\n      }\n    ]\n  },\n  \"targetUserIds\": [\n    \"550e8400-e29b-41d4-a716-446655440001\",\n    \"550e8400-e29b-41d4-a716-446655440002\"\n  ],\n  \"options\": {\n    \"notificationType\": \"event_reminder\",\n    \"urgency\": \"high\",\n    \"ttl\": 3600\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{testEventId}}/notify",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "events",
                "{{testEventId}}",
                "notify"
              ]
            },
            "description": "Send a notification to specific users or all ticket holders for an event. Requires admin or organizer role."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": {\n    \"title\": \"Event Update\",\n    \"body\": \"Your event starts soon!\",\n    \"url\": \"/events/test-event-id\"\n  },\n  \"options\": {\n    \"notificationType\": \"event_reminder\",\n    \"urgency\": \"high\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/events/test-event-id/notify",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "events",
                    "test-event-id",
                    "notify"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Notification sent successfully\",\n  \"sent\": 15,\n  \"failed\": 1,\n  \"invalidEndpoints\": 1,\n  \"targetSubscriptions\": 16\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Broadcast Notifications",
      "description": "Endpoints for sending broadcast notifications to all users (Admin only)",
      "item": [
        {
          "name": "Send Broadcast Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"payload\": {\n    \"title\": \"🎉 New Feature Alert!\",\n    \"body\": \"We've just launched push notifications! Stay updated with your favorite events.\",\n    \"url\": \"/notifications\",\n    \"icon\": \"https://example.com/icons/announcement.png\",\n    \"badge\": \"https://example.com/icons/badge.png\",\n    \"actions\": [\n      {\n        \"action\": \"explore\",\n        \"title\": \"Explore\",\n        \"icon\": \"https://example.com/icons/explore.png\"\n      },\n      {\n        \"action\": \"settings\",\n        \"title\": \"Settings\",\n        \"icon\": \"https://example.com/icons/settings.png\"\n      }\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/notify/broadcast",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "events",
                "notify",
                "broadcast"
              ]
            },
            "description": "Send a broadcast notification to all users with active push subscriptions. Requires admin role."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": {\n    \"title\": \"System Announcement\",\n    \"body\": \"Important update for all users\",\n    \"url\": \"/announcements\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/events/notify/broadcast",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "events",
                    "notify",
                    "broadcast"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Broadcast notification sent successfully\",\n  \"sent\": 1247,\n  \"failed\": 23,\n  \"invalidEndpoints\": 23,\n  \"targetSubscriptions\": 1270\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Health & Monitoring",
      "description": "Health check and monitoring endpoints for push notification service",
      "item": [
        {
          "name": "Push Service Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/push/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "health"
              ]
            },
            "description": "Check the health status of the push notification service."
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/push/health",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "health"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-01-15T12:00:00.000Z\",\n  \"services\": {\n    \"database\": \"healthy\",\n    \"vapid\": \"healthy\",\n    \"webpush\": \"healthy\"\n  },\n  \"metrics\": {\n    \"activeSubscriptions\": 1247,\n    \"totalNotificationsSent\": 15623,\n    \"failureRate\": 0.02\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Development & Testing",
      "description": "Development endpoints for testing and debugging (Development environment only)",
      "item": [
        {
          "name": "Development Test Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/push/dev/test",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "push",
                "dev",
                "test"
              ]
            },
            "description": "Development-only endpoint for testing push notification functionality. Only available in development environment."
          },
          "response": [
            {
              "name": "Development Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/push/dev/test",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "push",
                    "dev",
                    "test"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Development endpoint active\",\n  \"environment\": \"development\",\n  \"features\": [\n    \"test-notifications\",\n    \"debug-logging\",\n    \"mock-subscriptions\"\n  ]\n}"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate test data if needed",
          "if (!pm.collectionVariables.get('testEventId')) {",
          "    pm.collectionVariables.set('testEventId', '550e8400-e29b-41d4-a716-446655440000');",
          "}",
          "",
          "if (!pm.collectionVariables.get('testEndpoint')) {",
          "    pm.collectionVariables.set('testEndpoint', 'https://fcm.googleapis.com/fcm/send/test-endpoint');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test assertions",
          "pm.test('Status code is successful', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "pm.test('Response has correct content type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Log response for debugging",
          "if (pm.response.code >= 400) {",
          "    console.log('Error Response:', pm.response.text());",
          "}"
        ]
      }
    }
  ]
}